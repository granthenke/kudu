// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// This file contains common tasks and configuration for unit and integration tests.

// Support parallel unit test execution.
test {
  maxParallelForks = propertyWithDefault("maxParallelForks", "1").toInteger()
}

// Log all test events.
tasks.withType(Test) {
  testLogging {
    events "passed", "skipped", "failed"
    exceptionFormat = "full"
  }
}

// Adds pattern based integration test support.
// All test files matching the pattern "**/*IT*.java" will be run after the the other tests.
sourceSets {
  test {
    java {
      exclude "**/*IT*.java"
    }
  }
  integrationTest {
    java {
      srcDirs = ["src/test/java"]
      include "**/*IT*.java"
    }
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
  }
}
plugins.withType(ScalaPlugin) {
  sourceSets {
    test {
      scala {
        exclude "**/*IT*.scala"
      }
    }
    integrationTest {
      scala {
        srcDirs = ["src/test/scala"]
        include "**/*IT*.scala"
      }
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
    }
  }
}

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test, group: "Verification") {
  description = "Runs the integration tests."
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  maxParallelForks = 1
  mustRunAfter test
}
check.dependsOn(integrationTest)